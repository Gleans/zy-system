<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyut.system.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.zyut.system.model.dto.User">
        <!--@mbg.generated-->
        <!--@Table user-->
        <id column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="phone" jdbcType="BIGINT" property="phone"/>
        <result column="create_id" jdbcType="INTEGER" property="createId"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="update_id" jdbcType="INTEGER" property="updateId"/>
        <result column="update_time" jdbcType="BIGINT" property="updateTime"/>
        <result column="is_delete" jdbcType="VARCHAR" property="isDelete"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        user_id, username, `password`, email, sex, phone, create_id, create_time, update_id,
        update_time, is_delete
    </sql>

    <resultMap id="BaseVOResultMap" type="com.zyut.system.model.vo.UserInfoVO">
        <!--@mbg.generated-->
        <!--@Table user-->
        <id column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="phone" jdbcType="BIGINT" property="phone"/>
        <result column="roleListStr" property="roleListStr"/>
        <!--        <collection property="roleList" ofType="java.lang.Integer">-->
        <!--            <result column="role_id" property="value"/>-->
        <!--        </collection>-->
    </resultMap>
    <select id="query" resultMap="BaseVOResultMap">
        select uu.user_id,
        uu.username,
        uu.`password`,
        uu.email,
        uu.sex,
        uu.phone,
        <!--        ur.role_id,-->
        GROUP_CONCAT(ur.role_id) AS roleListStr
        from user uu
        left join user_role ur on uu.user_id = ur.user_id
        ${ew.customSqlSegment}

    </select>

</mapper>